<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <title>나의 오늘</title>
    <style>
        .schedule {
            margin-top: 20px;
            border: 1px solid #000;
            padding: 10px;
        }
        table {
            border-collapse: collapse;
            width: 100%;
        }
        th, td {
            border: 1px solid #000;
            padding: 5px;
            text-align: center;
        }
        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    <h1>나의 오늘</h1>
    
    <!-- 색칠하기 버튼 -->
    <div id="color-buttons">
        <button style="background-color: lightblue;" onclick="setColor('lightblue')">파란색</button>
        <button style="background-color: lightgreen;" onclick="setColor('lightgreen')">초록색</button>
        <button style="background-color: lightcoral;" onclick="setColor('lightcoral')">빨간색</button>
        <button style="background-color: lightgoldenrodyellow;" onclick="setColor('lightgoldenrodyellow')">노란색</button>
        <button style="background-color: lightgray;" onclick="setColor('lightgray')">회색</button>
        <button onclick="setColor('')">지우기</button> <!-- 색 지우기 버튼 추가 -->
        
    <!-- 새로운 일과 기록표 생성 버튼 -->
    <button style="background-color: white;" button onclick="addNewSchedule()">새로운 일과 기록표 추가</button>

    <!-- 생성된 일과 기록표 영역 -->
    <div id="schedule-container">
        <!-- 여기에 동적으로 새로운 기록표가 추가될 예정 -->
    </div>

    <script>
        let scheduleCount = 0;

        // 오늘 날짜를 6자리 숫자로 반환하는 함수
        function getCurrentDate() {
            const today = new Date();
            const dd = String(today.getDate()).padStart(2, '0');  // 일
            const mm = String(today.getMonth() + 1).padStart(2, '0');  // 월
            const yyyy = today.getFullYear().toString().slice(2);  // 연도 (끝 두 자리)
            return `${dd}${mm}${yyyy}`;  // 형식: 일월연도
        }

        // 새로운 일과 기록표 추가 함수
        function addNewSchedule() {
            scheduleCount++;
            const container = document.getElementById('schedule-container');

            // 오늘 날짜 가져오기
            const todayDate = getCurrentDate();

            // 새로운 스케줄 영역 추가
            const newSchedule = document.createElement('div');
            newSchedule.className = 'schedule';
            newSchedule.innerHTML = `
                <h2>${todayDate}</h2>
                <table>
                    <thead>
                        <tr>
                            <th>시간</th>
                            <th>10분</th>
                            <th>20분</th>
                            <th>30분</th>
                            <th>40분</th>
                            <th>50분</th>
                            <th>60분</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${createRows()}
                    </tbody>
                </table>

            `;
 const deleteButton = document.createElement('button');
    deleteButton.textContent = '삭제';
    deleteButton.onclick = function() {
        container.removeChild(newSchedule);
    };
    newSchedule.appendChild(deleteButton); // 여기서 추가

    container.appendChild(newSchedule);
            container.appendChild(newSchedule);
        }

        function createRows() {
            const startHour = 7;
            const endHour = 3;
            let rows = '';

            for (let i = startHour; i <= 24 + endHour; i++) {
                const hour = i % 24;
                rows += `
                    <tr>
                        <td>${hour}:00</td>
                        <td onclick="handleCellClick(this)"></td>
                        <td onclick="handleCellClick(this)"></td>
                        <td onclick="handleCellClick(this)"></td>
                        <td onclick="handleCellClick(this)"></td>
                        <td onclick="handleCellClick(this)"></td>
                        <td onclick="handleCellClick(this)"></td>
                    </tr>
                `;
            }
            return rows;
        }

        let currentColor = 'lightblue';  // 기본 색상

        // 색상 설정 함수
        function setColor(color) {
            currentColor = color;
        }

        // 셀 클릭 처리 함수
        function handleCellClick(cell) {
            if (cell.style.backgroundColor === currentColor) {
                // 이미 같은 색으로 칠해져 있으면 지우기
                cell.style.backgroundColor = '';
            } else {
                // 색칠 모드일 때
                cell.style.backgroundColor = currentColor;
            }
        }
    </script>
</body>
</html>
